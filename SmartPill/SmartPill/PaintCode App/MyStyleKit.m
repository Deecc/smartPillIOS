//
//  MyStyleKit.m
//  ProjectName
//
//  Created by AuthorName on 26/11/14.
//  Copyright (c) 2014 CompanyName. All rights reserved.
//
//  Generated by PaintCode (www.paintcodeapp.com)
//

#import "MyStyleKit.h"


@implementation MyStyleKit

#pragma mark Cache

static UIColor* _iconColor = nil;

static UIImage* _imageOfTodayIcon = nil;
static UIImage* _imageOfBoxIcon = nil;
static UIImage* _imageOfExtras = nil;
static UIImage* _imageOfRecipe = nil;
static UIImage* _imageOfProfileIcon = nil;

#pragma mark Initialization

+ (void)initialize
{
    // Colors Initialization
    _iconColor = [UIColor colorWithRed: 0.775 green: 0 blue: 0 alpha: 1];

}

#pragma mark Colors

+ (UIColor*)iconColor { return _iconColor; }

#pragma mark Drawing Methods

+ (void)drawTodayIcon;
{
    //// Color Declarations
    UIColor* color2 = [UIColor colorWithRed: 0 green: 0 blue: 0 alpha: 1];

    //// Group
    {
        //// Rectangle Drawing
        UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(1.25, 2.75, 29, 29)];
        [UIColor.blackColor setStroke];
        rectanglePath.lineWidth = 1;
        [rectanglePath stroke];


        //// Rectangle 2 Drawing
        UIBezierPath* rectangle2Path = [UIBezierPath bezierPathWithRect: CGRectMake(1.25, 11.25, 29, 20.5)];
        [color2 setStroke];
        rectangle2Path.lineWidth = 1;
        [rectangle2Path stroke];


        //// Rectangle 3 Drawing
        UIBezierPath* rectangle3Path = [UIBezierPath bezierPathWithRect: CGRectMake(6, 1, 1, 8)];
        [color2 setFill];
        [rectangle3Path fill];
        [UIColor.blackColor setStroke];
        rectangle3Path.lineWidth = 1;
        [rectangle3Path stroke];


        //// Rectangle 4 Drawing
        UIBezierPath* rectangle4Path = [UIBezierPath bezierPathWithRect: CGRectMake(24, 1, 1, 8)];
        [color2 setFill];
        [rectangle4Path fill];
        [UIColor.blackColor setStroke];
        rectangle4Path.lineWidth = 1;
        [rectangle4Path stroke];


        //// Rectangle 5 Drawing
        UIBezierPath* rectangle5Path = [UIBezierPath bezierPathWithRect: CGRectMake(15, 1, 1, 8)];
        [color2 setFill];
        [rectangle5Path fill];
        [UIColor.blackColor setStroke];
        rectangle5Path.lineWidth = 1;
        [rectangle5Path stroke];
    }
}

+ (void)drawBoxIcon;
{

    //// Group
    {
        //// Rectangle Drawing
        UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(1, 4.5, 32, 26.5)];
        [UIColor.blackColor setStroke];
        rectanglePath.lineWidth = 1;
        [rectanglePath stroke];


        //// Rectangle 2 Drawing
        UIBezierPath* rectangle2Path = [UIBezierPath bezierPathWithRect: CGRectMake(1, 2, 32, 1)];
        [UIColor.blackColor setStroke];
        rectangle2Path.lineWidth = 1;
        [rectangle2Path stroke];


        //// Rectangle 3 Drawing
        UIBezierPath* rectangle3Path = [UIBezierPath bezierPathWithRect: CGRectMake(9, 3, 16, 1)];
        [UIColor.blackColor setStroke];
        rectangle3Path.lineWidth = 1;
        [rectangle3Path stroke];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(1.5, 18.02)];
        [bezier2Path addLineToPoint: CGPointMake(32.5, 18.02)];
        [UIColor.blackColor setStroke];
        bezier2Path.lineWidth = 1;
        [bezier2Path stroke];


        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(22.5, 30.48)];
        [bezierPath addLineToPoint: CGPointMake(22.5, 4.59)];
        [UIColor.blackColor setStroke];
        bezierPath.lineWidth = 1;
        [bezierPath stroke];


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
        [bezier3Path moveToPoint: CGPointMake(11.5, 30.48)];
        [bezier3Path addLineToPoint: CGPointMake(11.5, 4.59)];
        [UIColor.blackColor setStroke];
        bezier3Path.lineWidth = 1;
        [bezier3Path stroke];
    }
}

+ (void)drawExtras;
{
    //// Color Declarations
    UIColor* color6 = [UIColor colorWithRed: 0.029 green: 0.024 blue: 0.024 alpha: 1];

    //// Oval Drawing
    UIBezierPath* ovalPath = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(13, 13, 8, 8)];
    [color6 setFill];
    [ovalPath fill];


    //// Oval 2 Drawing
    UIBezierPath* oval2Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(24, 13, 8, 8)];
    [color6 setFill];
    [oval2Path fill];


    //// Oval 3 Drawing
    UIBezierPath* oval3Path = [UIBezierPath bezierPathWithOvalInRect: CGRectMake(2, 13, 8, 8)];
    [color6 setFill];
    [oval3Path fill];
}

+ (void)drawRecipe;
{
    //// Color Declarations
    UIColor* color8 = [UIColor colorWithRed: 0.887 green: 0.97 blue: 0.018 alpha: 1];

    //// Bezier 6 Drawing
    UIBezierPath* bezier6Path = UIBezierPath.bezierPath;
    [bezier6Path moveToPoint: CGPointMake(28.25, 4.5)];
    [bezier6Path addLineToPoint: CGPointMake(26.73, 4.5)];
    [bezier6Path addLineToPoint: CGPointMake(25.97, 5)];
    [bezier6Path addLineToPoint: CGPointMake(24.46, 4)];
    [bezier6Path addLineToPoint: CGPointMake(22.94, 5)];
    [bezier6Path addLineToPoint: CGPointMake(21.42, 5)];
    [bezier6Path addLineToPoint: CGPointMake(19.91, 4)];
    [bezier6Path addCurveToPoint: CGPointMake(18.39, 5) controlPoint1: CGPointMake(19.91, 4) controlPoint2: CGPointMake(19.91, 5)];
    [bezier6Path addCurveToPoint: CGPointMake(15.35, 4) controlPoint1: CGPointMake(16.87, 5) controlPoint2: CGPointMake(15.35, 4)];
    [bezier6Path addCurveToPoint: CGPointMake(15.35, 5) controlPoint1: CGPointMake(15.35, 4) controlPoint2: CGPointMake(16.87, 5)];
    [bezier6Path addCurveToPoint: CGPointMake(13.84, 4) controlPoint1: CGPointMake(13.84, 5) controlPoint2: CGPointMake(13.84, 4)];
    [bezier6Path addLineToPoint: CGPointMake(12.32, 5)];
    [bezier6Path addLineToPoint: CGPointMake(9.28, 4)];
    [bezier6Path addCurveToPoint: CGPointMake(9.28, 5) controlPoint1: CGPointMake(9.28, 4) controlPoint2: CGPointMake(10.8, 5)];
    [bezier6Path addCurveToPoint: CGPointMake(6.25, 5) controlPoint1: CGPointMake(7.77, 5) controlPoint2: CGPointMake(6.25, 5)];
    [bezier6Path addLineToPoint: CGPointMake(7.77, 4)];
    [UIColor.blackColor setStroke];
    bezier6Path.lineWidth = 0.5;
    [bezier6Path stroke];


    //// Bezier 8 Drawing
    UIBezierPath* bezier8Path = UIBezierPath.bezierPath;
    [bezier8Path moveToPoint: CGPointMake(28.25, 8.38)];
    [bezier8Path addLineToPoint: CGPointMake(26.73, 8.37)];
    [bezier8Path addLineToPoint: CGPointMake(25.97, 7.75)];
    [bezier8Path addLineToPoint: CGPointMake(24.46, 9)];
    [bezier8Path addLineToPoint: CGPointMake(22.94, 7.75)];
    [bezier8Path addLineToPoint: CGPointMake(21.42, 7.75)];
    [bezier8Path addLineToPoint: CGPointMake(19.91, 9)];
    [bezier8Path addCurveToPoint: CGPointMake(18.39, 7.75) controlPoint1: CGPointMake(19.91, 9) controlPoint2: CGPointMake(19.91, 7.75)];
    [bezier8Path addCurveToPoint: CGPointMake(15.35, 9) controlPoint1: CGPointMake(16.87, 7.75) controlPoint2: CGPointMake(15.35, 9)];
    [bezier8Path addCurveToPoint: CGPointMake(15.35, 7.75) controlPoint1: CGPointMake(15.35, 9) controlPoint2: CGPointMake(16.87, 7.75)];
    [bezier8Path addCurveToPoint: CGPointMake(13.84, 9) controlPoint1: CGPointMake(13.84, 7.75) controlPoint2: CGPointMake(13.84, 9)];
    [bezier8Path addLineToPoint: CGPointMake(12.32, 7.75)];
    [bezier8Path addLineToPoint: CGPointMake(9.28, 9)];
    [bezier8Path addCurveToPoint: CGPointMake(9.28, 7.75) controlPoint1: CGPointMake(9.28, 9) controlPoint2: CGPointMake(10.8, 7.75)];
    [bezier8Path addCurveToPoint: CGPointMake(6.25, 7.75) controlPoint1: CGPointMake(7.77, 7.75) controlPoint2: CGPointMake(6.25, 7.75)];
    [bezier8Path addLineToPoint: CGPointMake(7.77, 9)];
    [UIColor.blackColor setStroke];
    bezier8Path.lineWidth = 0.5;
    [bezier8Path stroke];


    //// Bezier 5 Drawing
    UIBezierPath* bezier5Path = UIBezierPath.bezierPath;
    [bezier5Path moveToPoint: CGPointMake(28.25, 12.5)];
    [bezier5Path addLineToPoint: CGPointMake(26.73, 12.5)];
    [bezier5Path addLineToPoint: CGPointMake(25.97, 13)];
    [bezier5Path addLineToPoint: CGPointMake(24.46, 12)];
    [bezier5Path addLineToPoint: CGPointMake(22.94, 13)];
    [bezier5Path addLineToPoint: CGPointMake(21.42, 13)];
    [bezier5Path addLineToPoint: CGPointMake(19.91, 12)];
    [bezier5Path addCurveToPoint: CGPointMake(18.39, 13) controlPoint1: CGPointMake(19.91, 12) controlPoint2: CGPointMake(19.91, 13)];
    [bezier5Path addCurveToPoint: CGPointMake(15.35, 12) controlPoint1: CGPointMake(16.87, 13) controlPoint2: CGPointMake(15.35, 12)];
    [bezier5Path addCurveToPoint: CGPointMake(15.35, 13) controlPoint1: CGPointMake(15.35, 12) controlPoint2: CGPointMake(16.87, 13)];
    [bezier5Path addCurveToPoint: CGPointMake(13.84, 12) controlPoint1: CGPointMake(13.84, 13) controlPoint2: CGPointMake(13.84, 12)];
    [bezier5Path addLineToPoint: CGPointMake(12.32, 13)];
    [bezier5Path addLineToPoint: CGPointMake(9.28, 12)];
    [bezier5Path addCurveToPoint: CGPointMake(9.28, 13) controlPoint1: CGPointMake(9.28, 12) controlPoint2: CGPointMake(10.8, 13)];
    [bezier5Path addCurveToPoint: CGPointMake(6.25, 13) controlPoint1: CGPointMake(7.77, 13) controlPoint2: CGPointMake(6.25, 13)];
    [bezier5Path addLineToPoint: CGPointMake(7.77, 12)];
    [UIColor.blackColor setStroke];
    bezier5Path.lineWidth = 0.5;
    [bezier5Path stroke];


    //// Rectangle Drawing
    UIBezierPath* rectanglePath = [UIBezierPath bezierPathWithRect: CGRectMake(4.25, 0.75, 26.5, 31.5)];
    [UIColor.blackColor setStroke];
    rectanglePath.lineWidth = 0.5;
    [rectanglePath stroke];


    //// Group
    {
        //// Bezier Drawing
        UIBezierPath* bezierPath = UIBezierPath.bezierPath;
        [bezierPath moveToPoint: CGPointMake(17, 15)];
        [bezierPath addLineToPoint: CGPointMake(19.83, 13.64)];
        [bezierPath addLineToPoint: CGPointMake(34, 1.36)];
        [bezierPath addLineToPoint: CGPointMake(34, 0)];
        [bezierPath addLineToPoint: CGPointMake(32.58, 0)];
        [bezierPath addLineToPoint: CGPointMake(18.42, 12.27)];
        [bezierPath addLineToPoint: CGPointMake(17, 15)];
        [bezierPath closePath];
        [UIColor.blackColor setFill];
        [bezierPath fill];
        [UIColor.blackColor setStroke];
        bezierPath.lineWidth = 0.2;
        [bezierPath stroke];


        //// Bezier 3 Drawing
        UIBezierPath* bezier3Path = UIBezierPath.bezierPath;
        [bezier3Path moveToPoint: CGPointMake(17, 15)];
        [bezier3Path addLineToPoint: CGPointMake(18.42, 12.27)];
        [bezier3Path addLineToPoint: CGPointMake(19.83, 13.64)];
        [bezier3Path addLineToPoint: CGPointMake(17, 15)];
        [bezier3Path closePath];
        [color8 setFill];
        [bezier3Path fill];
        [UIColor.blackColor setStroke];
        bezier3Path.lineWidth = 0.2;
        [bezier3Path stroke];


        //// Bezier 2 Drawing
        UIBezierPath* bezier2Path = UIBezierPath.bezierPath;
        [bezier2Path moveToPoint: CGPointMake(28.33, 6.14)];
        [bezier2Path addLineToPoint: CGPointMake(32.58, 2.05)];
        [bezier2Path addLineToPoint: CGPointMake(31.88, 1.36)];
        [bezier2Path addLineToPoint: CGPointMake(27.62, 5.45)];
        [bezier2Path addLineToPoint: CGPointMake(26.92, 6.82)];
        [bezier2Path addLineToPoint: CGPointMake(28.33, 6.14)];
        [bezier2Path closePath];
        [color8 setFill];
        [bezier2Path fill];


        //// Bezier 4 Drawing
        UIBezierPath* bezier4Path = UIBezierPath.bezierPath;
        [bezier4Path moveToPoint: CGPointMake(34, 0)];
        [bezier4Path addLineToPoint: CGPointMake(34, 1.36)];
        [bezier4Path addLineToPoint: CGPointMake(32.58, 0)];
        [bezier4Path addLineToPoint: CGPointMake(34, 0)];
        [bezier4Path closePath];
        [color8 setFill];
        [bezier4Path fill];
    }
}

+ (void)drawProfileIcon;
{
    //// General Declarations
    CGContextRef context = UIGraphicsGetCurrentContext();


    //// Image Declarations
    UIImage* user_male2128 = [UIImage imageNamed: @"user_male2128"];

    //// user_male2- Drawing
    CGContextSaveGState(context);
    CGContextTranslateCTM(context, 1, 1);
    CGContextScaleCTM(context, 0.25, 0.25);

    UIBezierPath* user_male2Path = [UIBezierPath bezierPathWithRect: CGRectMake(0, 0, 128, 128)];
    CGContextSaveGState(context);
    [user_male2Path addClip];
    CGContextScaleCTM(context, 1.0, -1.0);
    CGContextDrawTiledImage(context, CGRectMake(0, 0, user_male2128.size.width, user_male2128.size.height), user_male2128.CGImage);
    CGContextRestoreGState(context);

    CGContextRestoreGState(context);
}

#pragma mark Generated Images

+ (UIImage*)imageOfTodayIcon;
{
    if (_imageOfTodayIcon)
        return _imageOfTodayIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(31, 33), NO, 0.0f);
    [MyStyleKit drawTodayIcon];
    _imageOfTodayIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfTodayIcon;
}

+ (UIImage*)imageOfBoxIcon;
{
    if (_imageOfBoxIcon)
        return _imageOfBoxIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(34, 33), NO, 0.0f);
    [MyStyleKit drawBoxIcon];
    _imageOfBoxIcon = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfBoxIcon;
}

+ (UIImage*)imageOfExtras;
{
    if (_imageOfExtras)
        return _imageOfExtras;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(34, 34), NO, 0.0f);
    [MyStyleKit drawExtras];
    _imageOfExtras = UIGraphicsGetImageFromCurrentImageContext();
    UIGraphicsEndImageContext();

    return _imageOfExtras;
}

+ (UIImage*)imageOfRecipe;
{
    if (_imageOfRecipe)
        return _imageOfRecipe;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(34, 34), NO, 0.0f);
    [MyStyleKit drawRecipe];
    _imageOfRecipe = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysOriginal];
    UIGraphicsEndImageContext();

    return _imageOfRecipe;
}

+ (UIImage*)imageOfProfileIcon;
{
    if (_imageOfProfileIcon)
        return _imageOfProfileIcon;

    UIGraphicsBeginImageContextWithOptions(CGSizeMake(34, 34), NO, 0.0f);
    [MyStyleKit drawProfileIcon];
    _imageOfProfileIcon = [UIGraphicsGetImageFromCurrentImageContext() imageWithRenderingMode: UIImageRenderingModeAlwaysOriginal];
    UIGraphicsEndImageContext();

    return _imageOfProfileIcon;
}

#pragma mark Customization Infrastructure

- (void)setTodayIconTargets: (NSArray*)todayIconTargets
{
    _todayIconTargets = todayIconTargets;

    for (id target in self.todayIconTargets)
        [target setImage: MyStyleKit.imageOfTodayIcon];
}

- (void)setBoxIconTargets: (NSArray*)boxIconTargets
{
    _boxIconTargets = boxIconTargets;

    for (id target in self.boxIconTargets)
        [target setImage: MyStyleKit.imageOfBoxIcon];
}

- (void)setExtrasTargets: (NSArray*)extrasTargets
{
    _extrasTargets = extrasTargets;

    for (id target in self.extrasTargets)
        [target setImage: MyStyleKit.imageOfExtras];
}

- (void)setRecipeTargets: (NSArray*)recipeTargets
{
    _recipeTargets = recipeTargets;

    for (id target in self.recipeTargets)
        [target setImage: MyStyleKit.imageOfRecipe];
}

- (void)setProfileIconTargets: (NSArray*)profileIconTargets
{
    _profileIconTargets = profileIconTargets;

    for (id target in self.profileIconTargets)
        [target setImage: MyStyleKit.imageOfProfileIcon];
}


@end
